{"name":"Raku","scopeName":"source.raku","patterns":[{"contentName":"comment.block.finish.raku","begin":"^\\s*(=)(finish)","patterns":[{"include":"#comment-block-syntax"}],"beginCaptures":{"1":{"name":"storage.modifier.block.finish.raku"},"2":{"name":"keyword.operator.block.finish.raku"}}},{"include":"#comment-block-delimited"},{"contentName":"comment.block.paragraph.raku","begin":"^\\s*(=)(?:(para)|(for)\\s+(\\w+))","end":"(?=^\\s*$|^\\s*=\\w+.*$)","patterns":[{"include":"#comment-block-syntax"}],"beginCaptures":{"1":{"name":"storage.modifier.block.paragraph.raku"},"2":{"name":"keyword.operator.block.paragraph.raku"},"3":{"name":"entity.other.attribute-name.paragraph.raku"}}},{"include":"#comment-block-abbreviated"},{"name":"meta.documentation.block.declarator.raku","match":"^\\s*(#)([\\|\\=])(.*)\\n","captures":{"1":{"name":"comment.punctuation.pound.raku"},"2":{"name":"meta.declarator.raku"},"3":{"name":"comment.inline.declarator.raku"}}},{"name":"comment.multiline.hash-tick.triple_paren.raku","begin":"\\s*#`\\(\\(\\(","end":"\\)\\)\\)","patterns":[{"name":"comment.internal.triple_paren.raku","begin":"\\(\\(\\(","end":"\\)\\)\\)"}]},{"name":"comment.multiline.hash-tick.triple_bracket.raku","begin":"\\s*#`\\[\\[\\[","end":"\\]\\]\\]","patterns":[{"name":"comment.internal.triple_bracket.raku","begin":"\\[\\[\\[","end":"\\]\\]\\]"}]},{"name":"comment.multiline.hash-tick.triple_brace.raku","begin":"\\s*#`\\{\\{\\{","end":"\\}\\}\\}","patterns":[{"name":"comment.internal.triple_brace.raku","begin":"\\{\\{\\{","end":"\\}\\}\\}"}]},{"name":"comment.multiline.hash-tick.triple_angle.raku","begin":"\\s*#`\u003c\u003c\u003c","end":"\u003e\u003e\u003e","patterns":[{"name":"comment.internal.triple_angle.raku","begin":"\u003c\u003c\u003c","end":"\u003e\u003e\u003e"}]},{"name":"comment.multiline.hash-tick.double_angle.raku","begin":"\\s*#`\u003c\u003c","end":"\u003e\u003e","patterns":[{"name":"comment.internal.double_angle.raku","begin":"\u003c\u003c","end":"\u003e\u003e"}]},{"name":"comment.multiline.hash-tick.double_paren.raku","begin":"\\s*#`\\(\\(","end":"\\)\\)","patterns":[{"name":"comment.internal.double_paren.raku","begin":"\\(\\(","end":"\\)\\)"}]},{"name":"comment.multiline.hash-tick.double_bracket.raku","begin":"\\s*#`\\[\\[","end":"\\]\\]","patterns":[{"name":"comment.internal.double_bracket.raku","begin":"\\[\\[","end":"\\]\\]"}]},{"name":"comment.multiline.hash-tick.double_brace.raku","begin":"\\s*#`{{","end":"}}","patterns":[{"name":"comment.internal.double_brace.raku","begin":"{{","end":"}}"}]},{"name":"comment.multiline.hash-tick.brace.raku","begin":"\\s*#`{","end":"}","patterns":[{"name":"comment.internal.brace.raku","begin":"{","end":"}"}]},{"name":"comment.multiline.hash-tick.angle.raku","begin":"\\s*#`\u003c","end":"\u003e","patterns":[{"name":"comment.internal.angle.raku","begin":"\u003c","end":"\u003e"}]},{"name":"comment.multiline.hash-tick.paren.raku","begin":"\\s*#`\\(","end":"\\)","patterns":[{"name":"comment.internal.paren.raku","begin":"\\(","end":"\\)"}]},{"name":"comment.multiline.hash-tick.bracket.raku","begin":"\\s*#`\\[","end":"\\]","patterns":[{"name":"comment.internal.bracket.raku","begin":"\\[","end":"\\]"}]},{"name":"comment.multiline.hash-tick.left_double_right_double.raku","begin":"\\s*#`“","end":"”","patterns":[{"name":"comment.internal.left_double_right_double.raku","begin":"“","end":"”"}]},{"name":"comment.multiline.hash-tick.left_double-low-q_right_double.raku","begin":"\\s*#`„","end":"”|“","patterns":[{"name":"comment.internal.left_double-low-q_right_double.raku","begin":"„","end":"”|“"}]},{"name":"comment.multiline.hash-tick.left_single_right_single.raku","begin":"\\s*#`‘","end":"’","patterns":[{"name":"comment.internal.left_single_right_single.raku","begin":"‘","end":"’"}]},{"name":"comment.multiline.hash-tick.low-q_left_single.raku","begin":"\\s*#`‚","end":"‘","patterns":[{"name":"comment.internal.low-q_left_single.raku","begin":"‚","end":"‘"}]},{"name":"comment.multiline.hash-tick.fw_cornerbracket.raku","begin":"\\s*#`「","end":"」","patterns":[{"name":"comment.internal.fw_cornerbracket.raku","begin":"「","end":"」"}]},{"name":"comment.multiline.hash-tick.hw_cornerbracket.raku","begin":"\\s*#`｢","end":"｣","patterns":[{"name":"comment.internal.hw_cornerbracket.raku","begin":"｢","end":"｣"}]},{"name":"comment.multiline.hash-tick.chevron.raku","begin":"\\s*#`«","end":"»","patterns":[{"name":"comment.internal.chevron.raku","begin":"«","end":"»"}]},{"name":"comment.multiline.hash-tick.s-shaped-bag-delimiter.raku","begin":"\\s*#`⟅","end":"⟆","patterns":[{"name":"comment.internal.s-shaped-bag-delimiter.raku","begin":"⟅","end":"⟆"}]},{"name":"string.quoted.left_double_right_double.raku","begin":"“","end":"”","patterns":[{"name":"constant.character.escape.raku","match":"\\\\[“”abtnfre\\\\\\{\\}]"},{"include":"#interpolation"},{"include":"source.quoting.raku#q_left_double_right_double_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"name":"string.quoted.left_double-low-q_right_double.raku","begin":"„","end":"”|“","patterns":[{"name":"constant.character.escape.raku","match":"\\\\[„”|“abtnfre\\\\\\{\\}]"},{"include":"#interpolation"},{"include":"source.quoting.raku#q_left_double-low-q_right_double_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"name":"string.quoted.single.left_single_right_single.raku","begin":"(?\u003c=\\W|^)‘","end":"’","patterns":[{"name":"constant.character.escape.raku","match":"\\\\[‘’\\\\]"},{"include":"source.quoting.raku#q_left_single_right_single_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"name":"string.quoted.single.low-q_left_single.raku","begin":"(?\u003c=\\W|^)‚","end":"‘","patterns":[{"name":"constant.character.escape.raku","match":"\\\\[‚‘\\\\]"},{"include":"source.quoting.raku#q_low-q_left_single_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"name":"string.quoted.single.single.raku","begin":"(?\u003c=\\W|^)'","end":"'","patterns":[{"name":"constant.character.escape.raku","match":"\\\\['\\\\]"},{"include":"source.quoting.raku#q_single_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"name":"string.quoted.double.raku","begin":"\"","end":"\"","patterns":[{"name":"constant.character.escape.raku","match":"\\\\[\"abtnfre\\\\\\{\\}]"},{"include":"#interpolation"},{"include":"source.quoting.raku#q_double_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"name":"string.quoted.right_double_right_double.raku","begin":"”","end":"”","patterns":[{"name":"constant.character.escape.raku","match":"\\\\[”abtnfre\\\\\\{\\}]"},{"include":"#interpolation"},{"include":"source.quoting.raku#q_right_double_right_double_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"begin":"(^[ \\t]+)?(?=#)","end":"(?!\\G)","patterns":[{"name":"comment.line.number-sign.raku","begin":"#","end":"\\n","beginCaptures":{"0":{"name":"punctuation.definition.comment.raku"}}}],"beginCaptures":{"1":{"name":"punctuation.whitespace.comment.leading.raku"}}},{"name":"keyword.operator.setbagmix.raku","match":"(?x) \\x{2208}|\\(elem\\)|\\x{2209}|\\!\\(elem\\)| \\x{220B}|\\(cont\\)|\\x{220C}|\\!\\(cont\\)| \\x{2286}|\\(\u003c=\\)  |\\x{2288}|\\!\\(\u003c=\\)  | \\x{2282}|\\(\u003c\\)   |\\x{2284}|\\!\\(\u003c\\)   | \\x{2287}|\\(\u003e=\\)  |\\x{2289}|\\!\\(\u003e=\\)  | \\x{2283}|\\(\u003e\\)   |\\x{2285}|\\!\\(\u003e\\)   | \\x{227C}|\\(\u003c\\+\\)|\\x{227D}|\\(\u003e\\+\\)   | \\x{222A}|\\(\\|\\) |\\x{2229}|\\(\u0026\\)      | \\x{2216}|\\(\\-\\) |\\x{2296}|\\(\\^\\)    | \\x{228D}|\\(\\.\\) |\\x{228E}|\\(\\+\\)"},{"name":"meta.class.raku","match":"(?x) ( class|enum|grammar|knowhow|module| package|role|slang|subset|monitor|actor ) (\\s+) ( ( (?:::|')? (?: ([a-zA-Z_À-ÿ\\$]) ([a-zA-Z0-9_À-ÿ\\$]|[\\-'][a-zA-Z0-9_À-ÿ\\$])* ) )+ )","captures":{"1":{"name":"storage.type.class.raku"},"3":{"name":"entity.name.type.class.raku"}}},{"include":"#p5_regex"},{"match":"(?x)\n(?\u003c=\n  ^\n | ^\\s\n | [\\s\\(] [^\\p{Nd}\\p{L}]\n | ~~\\s|~~\\s\\s|match\\(\n | match:\\s\n)\n([/]) # Solidus\n(.*?) # Regex contents\n(?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (/) # Ending","captures":{"1":{"name":"punctuation.definition.regexp.raku"},"2":{"name":"string.regexp.raku","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}]},"3":{"name":"punctuation.definition.regexp.raku"}}},{"contentName":"string.regexp.raku","begin":"(?x)\n(?\u003c= [=,(\\[]|when|=\u003e|~~) \\s*\n(?:\n  (m|rx|s)?\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n) # With the m or rx\n\\s*\n([/]) # Solidus","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\)|(?\u003c!')|(?\u003c=\\\\ ') ) (/)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.raku"},"2":{"name":"entity.name.section.adverb.regexp.raku"},"3":{"name":"punctuation.definition.regexp.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.raku"}}},{"contentName":"fstring.regexp.raku","begin":"(?x)\n(?\u003c= ^|[=,(\\[~]|when|=\u003e ) \\s*\n(?:\n  (m|rx|s)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n) # With the m or rx\n\\s*\n([{]) # Left curly brace","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (\\})","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.raku"},"2":{"name":"entity.name.section.adverb.regexp.raku"},"3":{"name":"punctuation.definition.regexp.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.raku"}}},{"contentName":"string.regexp.raku","begin":"(?\u003c![\\w\\/])(m|rx)((?:\\s*:\\w+)*)\\s*(\\{)","end":"(?\u003c!\\\\)(\\})","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.raku"},"2":{"name":"entity.name.section.adverb.regexp.raku"},"3":{"name":"punctuation.definition.regexp.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.raku"}}},{"contentName":"string.regexp.raku","begin":"(?\u003c![\\w\\/])(m|rx)((?:\\s*:\\w+)*)\\s*(\\[)","end":"(?\u003c!\\\\)(\\])","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.raku"},"2":{"name":"entity.name.section.adverb.regexp.raku"},"3":{"name":"punctuation.definition.regexp.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.raku"}}},{"name":"string.quoted.single.raku","begin":"(?\u003c=\\W|^)｢","end":"｣","patterns":[{"include":"source.quoting.raku#q_hw_cornerbracket_string_content"}],"beginCaptures":{"0":{"name":"punctuation.definition.string.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.string.end.raku"}}},{"contentName":"string.regexp.slash.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(/)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (/)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.slash.raku"},"2":{"name":"entity.name.section.adverb.regexp.slash.raku"},"3":{"name":"punctuation.definition.regexp.slash.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.slash.raku"}}},{"contentName":"string.regexp.brace.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n({)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (})","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.brace.raku"},"2":{"name":"entity.name.section.adverb.regexp.brace.raku"},"3":{"name":"punctuation.definition.regexp.brace.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.brace.raku"}}},{"contentName":"string.regexp.angle.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(\u003c)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (\u003e)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.angle.raku"},"2":{"name":"entity.name.section.adverb.regexp.angle.raku"},"3":{"name":"punctuation.definition.regexp.angle.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.angle.raku"}}},{"contentName":"string.regexp.paren.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(\\()","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (\\))","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.paren.raku"},"2":{"name":"entity.name.section.adverb.regexp.paren.raku"},"3":{"name":"punctuation.definition.regexp.paren.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.paren.raku"}}},{"contentName":"string.regexp.bracket.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(\\[)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (\\])","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.bracket.raku"},"2":{"name":"entity.name.section.adverb.regexp.bracket.raku"},"3":{"name":"punctuation.definition.regexp.bracket.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.bracket.raku"}}},{"contentName":"string.regexp.left_double_right_double.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(“)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (”)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.left_double_right_double.raku"},"2":{"name":"entity.name.section.adverb.regexp.left_double_right_double.raku"},"3":{"name":"punctuation.definition.regexp.left_double_right_double.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.left_double_right_double.raku"}}},{"contentName":"string.regexp.left_double-low-q_right_double.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(„)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (”|“)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.left_double-low-q_right_double.raku"},"2":{"name":"entity.name.section.adverb.regexp.left_double-low-q_right_double.raku"},"3":{"name":"punctuation.definition.regexp.left_double-low-q_right_double.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.left_double-low-q_right_double.raku"}}},{"contentName":"string.regexp.left_single_right_single.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(‘)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (’)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.left_single_right_single.raku"},"2":{"name":"entity.name.section.adverb.regexp.left_single_right_single.raku"},"3":{"name":"punctuation.definition.regexp.left_single_right_single.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.left_single_right_single.raku"}}},{"contentName":"string.regexp.low-q_left_single.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(‚)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (‘)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.low-q_left_single.raku"},"2":{"name":"entity.name.section.adverb.regexp.low-q_left_single.raku"},"3":{"name":"punctuation.definition.regexp.low-q_left_single.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.low-q_left_single.raku"}}},{"contentName":"string.regexp.fw_cornerbracket.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(「)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (」)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.fw_cornerbracket.raku"},"2":{"name":"entity.name.section.adverb.regexp.fw_cornerbracket.raku"},"3":{"name":"punctuation.definition.regexp.fw_cornerbracket.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.fw_cornerbracket.raku"}}},{"contentName":"string.regexp.hw_cornerbracket.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(｢)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (｣)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.hw_cornerbracket.raku"},"2":{"name":"entity.name.section.adverb.regexp.hw_cornerbracket.raku"},"3":{"name":"punctuation.definition.regexp.hw_cornerbracket.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.hw_cornerbracket.raku"}}},{"contentName":"string.regexp.chevron.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(«)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (»)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.chevron.raku"},"2":{"name":"entity.name.section.adverb.regexp.chevron.raku"},"3":{"name":"punctuation.definition.regexp.chevron.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.chevron.raku"}}},{"contentName":"string.regexp.s-shaped-bag-delimiter.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n(⟅)","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (⟆)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.s-shaped-bag-delimiter.raku"},"2":{"name":"entity.name.section.adverb.regexp.s-shaped-bag-delimiter.raku"},"3":{"name":"punctuation.definition.regexp.s-shaped-bag-delimiter.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.s-shaped-bag-delimiter.raku"}}},{"contentName":"string.regexp.any.raku","begin":"(?x)\n(?\u003c= ^|\\s )\n(?:\n  (m|rx|s|S)\n  (\n    (?:\n      (?\u003c!:P5) # \u003c This can maybe be removed because we\n      \\s*:\\w+\n      (?!\\s*:P5) # \u003c include p5_regex above it\n    )*\n  )\n)\n\\s*\n([^#\\p{Ps}\\p{Pe}\\p{Pi}\\p{Pf}\\w'\\-\u003c\u003e\\-\\]\\)\\}\\{])","end":"(?x) (?: (?\u003c!\\\\)|(?\u003c=\\\\\\\\) ) (\\3)","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"beginCaptures":{"1":{"name":"string.regexp.construct.any.raku"},"2":{"name":"entity.name.section.adverb.regexp.any.raku"},"3":{"name":"punctuation.definition.regexp.any.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.any.raku"}}},{"include":"#shellquotes"},{"name":"string.quoted.heredoc.raku","begin":"(?x) (?: ( qq|qqx|qqw ) \\s* ( (?:\\s*:\\w+)*\\s*: (?: to|heredoc ) )\\s* | (qqto) \\s* ( (?:\\s*:\\w+)* )\\s* ) / (\\S+) /","end":"\\s*\\5","patterns":[{"name":"meta.heredoc.continuation.raku","begin":"(?\u003c=/)","end":"\\n","patterns":[{"include":"$self"}]},{"begin":"^","end":"$","patterns":[{"include":"#interpolation"}]},{"name":"string.quoted.qq.heredoc.raku","match":"(?x) ^ (?: . | \\n )* $"}],"beginCaptures":{"1":{"name":"string.quoted.construct.raku"},"2":{"name":"support.function.adverb.raku"},"3":{"name":"string.quoted.construct.raku"},"4":{"name":"support.function.adverb.raku"},"5":{"name":"entity.other.attribute-name.heredoc.delimiter.raku"}},"endCaptures":{"0":{"name":"entity.other.attribute-name.heredoc.delimiter.raku"}}},{"name":"meta.heredoc.raku","begin":"(?x) (?: ( [qQ](?!/)|qw|qww|qx|qqx ) \\s* ( (?:\\s*:\\w+)*\\s*: (?: to|heredoc ) )\\s* | (qto|Qto) \\s* ( (?:\\s*:\\w+)* )\\s* ) / (\\S+) /","end":"\\s*\\5","patterns":[{"name":"meta.heredoc.continuation.raku","begin":"(?\u003c=/)","end":"\\n","patterns":[{"include":"$self"}]},{"name":"string.quoted.q.heredoc.raku","match":"(?x) ^ (?: . | \\n )* $"}],"beginCaptures":{"1":{"name":"string.quoted.construct.raku"},"2":{"name":"support.function.adverb.raku"},"3":{"name":"string.quoted.construct.raku"},"4":{"name":"support.function.adverb.raku"},"5":{"name":"entity.other.attribute-name.heredoc.delimiter.raku"}},"endCaptures":{"0":{"name":"entity.other.attribute-name.heredoc.delimiter.raku"}}},{"include":"source.quoting.raku"},{"include":"#variables"},{"begin":"(?x) (?\u003c![%$\u0026@]|\\w) (?:  (multi|proto) \\s+ )? (macro|sub|submethod|method|multi|only|category) \\s+ (!)? (  [^\\s(){}]+ )","end":"(?=[\\(\\{\\s])","beginCaptures":{"1":{"name":"storage.type.declarator.multi.raku"},"2":{"name":"storage.type.declarator.type.raku"},"3":{"name":"support.class.method.private.raku"},"4":{"patterns":[{"captures":{"1":{"name":"entity.name.function.raku"},"2":{"name":"punctuation.definition.function.adverb.raku"},"3":{"name":"support.type.class.adverb.raku"},"4":{"patterns":[{"include":"$self"}]}}}]}}},{"name":"meta.regexp.named.raku","begin":"(?\u003c![\\.:])(regex|rule|token)(?!\\s*=\u003e|\\S)","end":"(?\u003c!\\\\)\\}","patterns":[{"name":"entity.name.function.regexp.named.TOP.raku","match":"TOP"},{"name":"entity.name.function.regexp.named.raku"},{"name":"meta.regexp.named.adverb.raku","match":"(:)(\\w+)","captures":{"1":{"name":"punctuation.definition.regexp.adverb.raku"},"2":{"name":"support.type.class.adverb.raku"}}},{"contentName":"string.array.words.raku","begin":"\u003c","end":"(?x) \\\\\\\\|(?\u003c!\\\\) ( \u003e ) (?=[\\s\\{])"},{"contentName":"string.array.words.chevron.raku","begin":"«","end":"(?x)  \\\\\\\\|(?\u003c!\\\\) ( » ) (?=[\\s\\{])"},{"name":"meta.regexp.named.signature.raku","begin":"\\(","end":"(?\u003c!\\\\)\\)","patterns":[{"include":"$self"}],"captures":{"0":{"name":"punctuation.definition.regexp.named.signature.perlfe"}}},{"name":"meta.regexp.named.block.raku","begin":"\\{","end":"(?=\\})","patterns":[{"include":"#interpolation"},{"include":"source.regexp.raku"}],"captures":{"0":{"name":"punctuation.definition.regex.named.raku"}}}],"beginCaptures":{"1":{"name":"storage.type.declare.regexp.named.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.regexp.named.raku"}}},{"name":"variable.language.raku","match":"\\b(?\u003c![\\-:])(self)(?!\\-)\\b"},{"name":"keyword.other.include.raku","match":"\\b(?\u003c![\\-:])(use|require|no|need)(?!\\-)\\b"},{"name":"keyword.control.conditional.raku","match":"(?x)\\b(?\u003c![\\-:])( if|else|elsif|unless|with|orwith|without )(?!\\-)\\b"},{"name":"storage.modifier.declarator.raku","match":"\\b(?\u003c![\\-:])(let|my|our|state|temp|has|constant)(?!\\-)\\b"},{"contentName":"string.array.words.raku","begin":"(?x) (?\u003c= = | for ) \\s* ( \u003c )","end":"(?x)  \\\\\\\\|(?\u003c!\\\\) ( \u003e )","patterns":[{"include":"source.quoting.raku#q_bracket_string_content"}],"beginCaptures":{"1":{"name":"span.keyword.operator.array.words.raku"}},"endCaptures":{"1":{"name":"span.keyword.operator.array.words.raku"}}},{"name":"storage.modifier.assignment.raku","match":"(?x) (?: [+:\\-.*/] | \\|\\| )? (?\u003c! = ) = (?! [\u003e=~] )"},{"contentName":"string.array.words.raku","begin":"(?x) (?\u003c! \\+\u003c | \\+\\s|\\+ ) \\s* (\u003c) (?\u003c! \u003e ) (?= [^\u003c]* (?: [^\u003c] ) \u003e )","end":"(?x) \\\\\\\\|(?\u003c!\\\\) ( \u003e )","beginCaptures":{"1":{"name":"span.keyword.operator.array.words.raku"}},"endCaptures":{"1":{"name":"span.keyword.operator.array.words.raku"}}},{"name":"keyword.control.repeat.raku","match":"\\b(for|loop|repeat|while|until|gather|given)(?!\\-)\\b"},{"name":"keyword.control.flowcontrol.raku","match":"(?x)\n\\b (?\u003c! [\\-:.] )\n(\n   take|do|when|next|last|redo|return|return-rw\n  |contend|maybe|defer|default|exit|quietly\n  |continue|break|goto|leave|supply\n  |async|lift|await|start|react|whenever|parse\n)\n(?! - ) \\b"},{"name":"keyword.control.flowcontrol.regex.raku","match":"(?x)\n\\b (?\u003c! [\\-:] )\n(\n  make|made\n)\n(?! - ) \\b"},{"name":"storage.modifier.type.constraints.raku","match":"(?x)\\b(?\u003c![\\-:]) (is|does|as|but|trusts|of|returns|handles|where|augment|supersede) (?!\\-)\\b (?!\\s*=\u003e)"},{"name":"keyword.control.closure.trait.raku","match":"(?x)\\b(?\u003c![\\-:])( BEGIN|CHECK|INIT |START|FIRST|ENTER |LEAVE|KEEP|UNDO |NEXT|LAST|PRE |POST|END|CATCH |CONTROL|TEMP|QUIT )(?!\\-)\\b"},{"name":"keyword.control.control-handlers.raku","match":"\\b(?\u003c![\\-:])(die|fail|try|warn)(?!\\-)\\b(?!\\s*=\u003e)"},{"name":"entity.name.type.trait.raku","match":"(?x)\\b(?\u003c![\\-:])( prec|irs|ofs|ors|export|raw|deep |binary|unary|reparsed|rw|parsed |cached|readonly|defequiv|will |ref|copy|inline|tighter|looser |equiv|assoc|required|pure )(?!\\-)\\b  (?!\\s*=\u003e)"},{"name":"constant.numeric.raku","match":"\\b(NaN|Inf)(?!\\-)\\b"},{"name":"constant.language.boolean.raku","match":"\\b(True|False)\\b"},{"name":"constant.language.pragma.raku","match":"(?x)\\b(?\u003c![\\-:])( fatal|internals| MONKEY\\-(?:TYPING|SEE\\-NO\\-EVAL|BRAINS|GUTS|BUSINESS|TRAP|SHINE|WRENCH|BARS)| nqp|QAST|strict|trace|worries|invocant|parameters|experimental| cur|soft|variables|attributes|v6(?:\\.\\w)*|lib|Test|NativeCall )(?!\\-) \\b (?!\\s*=\u003e)"},{"match":"(?x)(?\u003c![:\\-\\w]) (Backtrace|Exception|Failure|X) (?: \\:\\:[a-zA-Z]+ )* \\b","captures":{"0":{"name":"support.type.exception.raku"}}},{"match":"(?x)\\b(?\u003c!:)(\n  AST|Any|Array|Associative|Attribute|Bag|BagHash|Baggy|\n  Blob|Block|Bool|Callable|Capture|Channel|Code|Complex|Cool|\n  CurrentThreadScheduler|Cursor|Date|DateTime|Dateish|Duration|\n  Enum|FatRat|Grammar|Hash|IO|Instant|Iterable|\n  Iterator|Junction|Label|List|Lock|Macro|Map|Match|Metamodel|\n  Method|Mix|MixHash|Mixy|Mu|Nil|Numeric|ObjAt|Pair|\n  Parameter|Pod|Positional|PositionalBindFailover|Proc|Promise|\n  Proxy|QuantHash|Range|Rat|Rational|Real|Regex|Routine|Scheduler|\n  Seq|Set|SetHash|Setty|Signature|Slip|Stash|Str|str|Stringy|Sub|\n  Submethod|Supply|Tap|Temporal|Thread|ThreadPoolScheduler|\n  Variable|Version|Whatever|WhateverCode|bool|size_t|\n  Int|int|int1|int2|int4|int8|int16|int32|int64|\n  Rat|rat|rat1|rat2|rat4|rat8|rat16|rat32|rat64|\n  Buf|buf|buf1|buf2|buf4|buf8|buf16|buf32|buf64|\n  UInt|uint|uint1|uint2|uint4|uint8|uint16|uint32|uint64|\n  utf8|utf16|utf32|Num|num|num32|num64|IntStr|NumStr|\n  RatStr|ComplexStr|CArray|Pointer|long|longlong|\n  # These are for types which have sub types\n  Order|More|Less|Same\n)\\b (?!\\s*=\u003e)","captures":{"1":{"name":"support.type.raku"},"2":{"name":"support.class.type.adverb.raku"}}},{"name":"keyword.operator.reduction.raku","match":"(?x) ( \\[ / \\] )"},{"name":"meta.adverb.definedness.raku","match":"(?\u003c=\\w)(\\:)([DU_])\\b","captures":{"1":{"name":"keyword.operator.adverb.raku"},"2":{"name":"keyword.other.special-method.definedness.raku"}}},{"name":"keyword.operator.word.raku","match":"(?x)\\b( div|mod|gcd|lcm|x|xx|temp|let|but|cmp|leg| eq|ne|gt|ge|lt|le|before|after|eqv|min|max|ff|fff|not|so|Z| and|andthen|or|orelse )\\b(?!\\-)| \\b(X)(?!:)\\b"},{"name":"meta.operator.non.ligature.raku","match":"(=~=|≅)","captures":{"1":{"name":"keyword.operator.approx-equal.raku"}}},{"name":"keyword.operator.multi-symbol.raku","match":"(?x) \u003c== | ==\u003e | \u003c=\u003e | =\u003e | --\u003e | -\u003e | \\+\\| | \\+\\+ | -- | \\*\\* | \\?\\?\\? | \\?\\? | \\!\\!\\! | \\!\\! | \u0026\u0026 | \\+\\^ | \\?\\^ | %% | \\+\u0026 | \\+\u003c | \\+\u003e | \\+\\^ | \\.\\.(?!\\.) | \\.\\.\\^ | \\^\\.\\. | \\^\\.\\.\\^ | \\?\\| | !=(?!\\=) | !==(?!\\=) | \u003c=(?!\u003e) | \u003e= | === | == | =:= | ~~ | \\x{2245} | \\|\\| | \\^\\^ | \\/\\/ | := | ::= | \\.\\.\\."},{"include":"#special_variables"},{"name":"meta.subscript.whatever.raku","match":"(?x)(?\u003c=\\[) \\s* (\\*) \\s* ([\\-\\*%\\^\\+\\/]|div|mod|gcd|lcm) \\s* (\\d+) \\s* (?=\\])","captures":{"1":{"name":"constant.language.whatever.raku"},"2":{"name":"keyword.operator.minus.back-from.raku"},"3":{"name":"constant.numeric.back-from.raku"}}},{"name":"constant.language.whatever.hack.raku","match":"\\*\\s*(?=\\])"},{"name":"support.function.raku","match":"(?x)\\b(?\u003c![\\-\\\\])( :: )?(exists)(?!\\-)\\b(?!\\s*=\u003e)","captures":{"1":{"name":"keyword.operator.colon.raku"}}},{"name":"support.function.raku","match":"(?x)\\b(?\u003c![\\-:\\\\])( :: )?( eager|hyper|substr|index|rindex|grep|map|sort|join|lines|hints |chmod|split|reduce|min|max|reverse|truncate|zip|cat|roundrobin |classify|first|sum|keys|values|pairs|defined|delete|exists |elems|end|kv|any|all|one|wrap|shape|key|value|name|pop|push |shift|splice|unshift|floor|ceiling|abs|exp|log|log10|rand|sign |sqrt|sin|cos|tan|round|strand|roots|cis|unpolar|polar|atan2 |pick|chop|chomp|lc|lcfirst|uc|ucfirst|capitalize|mkdir |normalize|pack|unpack|quotemeta|comb|samecase|sameaccent|chars |nfd|nfc|nfkd|nfkc|printf|sprintf|caller|evalfile|run|runinstead |nothing|want|bless|chr|ord|ords|gmtime|time|eof|localtime|gethost |getpw|chroot|getlogin|getpeername|kill|fork|wait|perl|graphs |codes|bytes|clone|print|open|read|write|readline|say|seek|close |opendir|readdir|slurp|spurt|shell|run|pos|fmt|vec|link|unlink |symlink|unique|pair|asin|atan|sec|cosec|cotan|asec|acosec|acotan |sinh|cosh|tanh|asinh|done|acos|acosh|atanh|sech|cosech|cotanh |sech|acosech|acotanh|asech|ok|nok|plan-ok|dies-ok|lives-ok|skip |todo|pass|flunk|force-todo|use-ok|isa-ok|diag|is-deeply|isnt |like|skip-rest|unlike|cmp-ok|eval-dies-ok|nok-error|cmp-ok |eval-lives-ok|approx|is-approx|throws-ok|version-lt|plan|EVAL |succ|pred|times|nonce|once|signature|new|connect|operator|undef |undefine|sleep|from|to|infix|postfix|prefix|circumfix|can-ok |postcircumfix|minmax|lazy|count|unwrap|getc|pi|tau|context|void |quasi|body|each|contains|rewinddir|subst|can|isa|flush|arity |assuming|rewind|callwith|callsame|nextwith|nextsame|attr|does-ok |eval-elsewhere|none|not|srand|so|trim|trim-start|trim-end|lastcall |WHAT|WHY|WHERE|HOW|WHICH|VAR|WHO|WHENCE|ACCEPTS|REJECTS|not |iterator|by|re|im|invert|flip|gist|flat|tree|is-prime |throws-like|trans|race|hyper|tap|emit|done-testing|quit|dd|note |prepend|categorize|antipairs|categorize-list|parse-base|base |starts-with|ends-with|put|append|tail|\\x{03C0}|\\x{03C4}|\\x{212F} |get|words|new-from-pairs|uniname|uninames|uniprop|uniprops |slurp-rest|throw|break|keep|match|trim-leading|trim-trailing |is-lazy|pull-one|push-exactly|push-at-least|push-all|push-until-lazy |sink-all|skip-at-least|skip-at-least-pull-one )(?!\\-)\\b(?!\\s*=\u003e)","captures":{"1":{"name":"keyword.operator.colon.raku"}}},{"name":"support.function.raku","match":"(?x)\\b(?\u003c![\\-:]|\\\\)(?\u003c=\\.) (e|d|f|s|l|r|w|rw|x|rwx|z|abspath|basename|extension|dirname |watch|is-absolute|parts|volume|path|is-relative|parent|child |resolve|dir) (?!\\-)\\b(?!\\s*=\u003e)"},{"include":"#numbers"},{"name":"keyword.operator.generic.raku","match":"(?x) (?\u003c!\\(|\\*)\\%| [\\^\\+\u003e\u003c\\*\\!\\?~\\/\\|]| (?\u003c!\\$)\\.| (?\u003c!:):(?!:)| (?\u003c=\\s)\\-(?=[\\s\\(\\{\\[])| (?\u003c!\\w)[o\\x{2218}](?!\\w)"},{"name":"string.pair.key.raku","match":"(?x) (?\u003c=^|\\W|\\s) ([\\w'\\-]+) \\s* (?= =\u003e)"},{"name":"routine.name.raku","match":"(?x) \\b (?\u003c!\\d) ([a-zA-Z_\\x{c0}-\\x{ff}\\$]) ( [a-zA-Z0-9_\\x{c0}-\\x{ff}\\$]| [\\-'][a-zA-Z_\\x{c0}-\\x{ff}\\$][a-zA-Z0-9_\\x{c0}-\\x{ff}\\$] )*"},{"contentName":"constant.numeric.raku","begin":"(?\u003c=\\:)(\\d+)(\u003c)","end":"\u003e","beginCaptures":{"1":{"name":"support.type.radix.raku"},"2":{"name":"punctuation.definition.radix.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.radix.raku"}}},{"name":"meta.block.raku","begin":"\\{","end":"\\}","patterns":[{"include":"$self"}],"beginCaptures":{"0":{"name":"punctuation.definition.block.raku"}},"endCaptures":{"0":{"name":"punctuation.definition.block.raku"}}}],"repository":{"comment-block-abbreviated":{"patterns":[{"contentName":"entity.name.section.head.abbreviated.raku","begin":"^\\s*(=)(head\\w*)\\s+(.+?)\\s*$","end":"(?=^\\s*$|^\\s*=\\w+.*$)","patterns":[{"include":"#comment-block-syntax"}],"captures":{"1":{"name":"storage.modifier.block.abbreviated.raku"},"2":{"name":"entity.other.attribute-name.block.abbreviated.raku"},"3":{"name":"entity.name.section.abbreviated.raku","patterns":[{"include":"#comment-block-syntax"}]}}},{"contentName":"comment.block.abbreviated.raku","begin":"^\\s*(=)(\\w+)\\s+(.+?)\\s*$","end":"(?=^\\s*$|^\\s*=\\w+.*$)","patterns":[{"include":"#comment-block-syntax"}],"captures":{"1":{"name":"storage.modifier.block.abbreviated.raku"},"2":{"name":"entity.other.attribute-name.block.abbreviated.raku"},"3":{"name":"entity.name.section.abbreviated.raku","patterns":[{"include":"#comment-block-syntax"}]}}}]},"comment-block-delimited":{"patterns":[{"contentName":"comment.block.delimited.raku","begin":"^\\s*(=)(begin)\\s+(\\w+)","end":"^\\s*(=)(end)\\s+(\\w+)","patterns":[{"include":"#comment-block-syntax"}],"captures":{"1":{"name":"storage.modifier.block.delimited.raku"},"2":{"name":"keyword.operator.block.delimited.raku"},"3":{"name":"entity.other.attribute-name.block.delimited.raku"}}}]},"comment-block-syntax":{"patterns":[{"include":"#comment-block-delimited"},{"include":"#comment-block-abbreviated"},{"name":"meta.pod.c.raku","contentName":"markup.underline.raku","begin":"(?x) (U) (\u003c\u003c\u003c)","end":"(?x) (\u003e\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_triple_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.italic.raku","begin":"(?x) (I) (\u003c\u003c\u003c)","end":"(?x) (\u003e\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_triple_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.bold.raku","begin":"(?x) (B) (\u003c\u003c\u003c)","end":"(?x) (\u003e\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_triple_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.raw.code.raku","begin":"(?x) ([A-Z]) (\u003c\u003c\u003c)","end":"(?x) (\u003e\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_triple_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.underline.raku","begin":"(?x) (U) (\u003c\u003c)","end":"(?x) (\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_double_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.italic.raku","begin":"(?x) (I) (\u003c\u003c)","end":"(?x) (\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_double_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.bold.raku","begin":"(?x) (B) (\u003c\u003c)","end":"(?x) (\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_double_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.raw.code.raku","begin":"(?x) ([A-Z]) (\u003c\u003c)","end":"(?x) (\u003e\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_double_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.underline.raku","begin":"(?x) (U) (\u003c)","end":"(?x) (\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.italic.raku","begin":"(?x) (I) (\u003c)","end":"(?x) (\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.bold.raku","begin":"(?x) (B) (\u003c)","end":"(?x) (\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.raw.code.raku","begin":"(?x) ([A-Z]) (\u003c)","end":"(?x) (\u003e)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_angle_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.underline.raku","begin":"(?x) (U) («)","end":"(?x) (»)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_chevron_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.italic.raku","begin":"(?x) (I) («)","end":"(?x) (»)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_chevron_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.bold.raku","begin":"(?x) (B) («)","end":"(?x) (»)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_chevron_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}},{"name":"meta.pod.c.raku","contentName":"markup.raw.code.raku","begin":"(?x) ([A-Z]) («)","end":"(?x) (»)","patterns":[{"include":"#comment-block-syntax"},{"include":"source.quoting.raku#q_chevron_string_content"}],"beginCaptures":{"1":{"name":"support.function.pod.code.raku"},"2":{"name":"punctuation.section.embedded.pod.code.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.pod.code.raku"}}}]},"hex_escapes":{"patterns":[{"name":"punctuation.hex.raku","match":"(?x) (\\\\x) ( \\[ ) ( [\\dA-Fa-f]+ ) ( \\] )","captures":{"1":{"name":"keyword.punctuation.hex.raku"},"2":{"name":"keyword.operator.bracket.open.raku"},"3":{"name":"routine.name.hex.raku"},"4":{"name":"keyword.operator.bracket.close.raku"}}}]},"interpolation":{"patterns":[{"name":"variable.other.identifier.interpolated.raku","captures":{"1":{"name":"variable.other.identifier.sigil.raku"},"2":{"name":"support.class.twigil.interpolated.raku"},"5":{"patterns":[{"begin":"\u003c","end":"\u003e","beginCaptures":{"0":{"name":"keyword.operator.chevron.open.raku"}},"endCaptures":{"0":{"name":"keyword.operator.chevron.close.raku"}}},{"begin":"\\[","end":"\\]","patterns":[{"include":"$self"}],"beginCaptures":{"0":{"name":"keyword.operator.bracket.open.raku"}},"endCaptures":{"0":{"name":"keyword.operator.bracket.close.raku"}}}]},"6":{"name":"keyword.operator.dot.raku"},"7":{"name":"support.function.raku"},"8":{"patterns":[{"include":"$self"}],"beginCaptures":{"0":{"name":"keyword.operator.paren.open.raku"}},"endCaptures":{"0":{"name":"keyword.operator.paren.close.raku"}}}}},{"include":"#hex_escapes"},{"include":"#regexp-variables"},{"name":"meta.interpolation.raku","begin":"(?x) (?\u003c! m|rx|m:i|rx:i) (\\{)","end":"(\\})","patterns":[{"include":"$self"}],"beginCaptures":{"1":{"name":"punctuation.section.embedded.begin.raku"}},"endCaptures":{"1":{"name":"punctuation.section.embedded.end.raku"}}}]},"numbers":{"patterns":[{"name":"constant.numeric.radix.raku","match":"(?x)\n(?\u003c= ^ | [=,;^\\s{\\[(/] | \\.\\. )\n[-−+]?\n0[bodx]\\w+"},{"name":"constant.numeric.raku","match":"(?x)\n          (?\u003c= ^ | [×÷*=,:;^\\s{\\[(/] | \\.\\. | … )\n          (?: \\^? [+\\-−] )?\n(?:\n    (?: \\d+ (?: [\\_\\d]+ \\d )? )\n    (?: \\.  \\d+ (?: [\\_\\d]+ \\d )? )?\n)\n(?:  e  (?:-|−)? \\d+ (?: [\\_\\d]+ \\d )? )?"},{"name":"constant.numeric.raku","match":"(?x)\n          (?\u003c= ^ | [×÷*=,:;^\\s{\\[(/] | \\.\\. )\n          (?: [+-−] )?\n(?:\n    (?: \\.  \\d+ (?: [\\_\\d]+ \\d )? )\n)\n(?:  e  (?:-|−)? \\d+ (?: [\\_\\d]+ \\d )? )?"}]},"p5_escaped_char":{"patterns":[{"name":"constant.character.escape.perl","match":"\\\\\\d+"},{"name":"constant.character.escape.perl","match":"\\\\c[^\\s\\\\]"},{"name":"constant.character.escape.perl","match":"\\\\g(?:\\{(?:\\w*|-\\d+)\\}|\\d+)"},{"name":"constant.character.escape.perl","match":"\\\\k(?:\\{\\w*\\}|\u003c\\w*\u003e|'\\w*')"},{"name":"constant.character.escape.perl","match":"\\\\N\\{[^\\}]*\\}"},{"name":"constant.character.escape.perl","match":"\\\\o\\{\\d*\\}"},{"name":"constant.character.escape.perl","match":"\\\\(?:p|P)(?:\\{\\w*\\}|P)"},{"name":"constant.character.escape.perl","match":"\\\\x(?:[0-9a-zA-Z]{2}|\\{\\w*\\})?"},{"name":"constant.character.escape.perl","match":"\\\\."}]},"p5_regex":{"patterns":[{"contentName":"string.regexp.p5.raku","begin":"(?x)(?\u003c![\\w\\/])(m|rx) \\s*((?:\\s*:\\w+)*)?(:P5)((?:\\s*:\\w+)*)?\\s* (\\{)","end":"(?\u003c!\\\\)(\\})([gmixXsuUAJ]+)?","patterns":[{"include":"#p5_escaped_char"},{"include":"source.quoting.raku#q_brace_string_content"}],"beginCaptures":{"1":{"name":"string.regexp.construct.raku"},"2":{"name":"entity.name.section.adverb.regexp.raku"},"3":{"name":"entity.name.section.p5.adverb.regexp.raku"},"4":{"name":"entity.name.section.adverb.regexp.raku"},"5":{"name":"punctuation.definition.regexp.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.raku"},"2":{"name":"invalid.illegal.p5.regexp.modifier.raku"}}},{"contentName":"string.regexp.p5.raku","begin":"(?x)(?\u003c![\\w\\/])(m|rx) \\s*((?:\\s*:\\w+)*)?(:P5)((?:\\s*:\\w+)*)?\\s* (\\[)","end":"(?\u003c!\\\\)(\\])([gmixXsuUAJ]+)?","patterns":[{"include":"#p5_escaped_char"},{"include":"source.quoting.raku#q_bracket_string_content"}],"beginCaptures":{"1":{"name":"string.regexp.construct.raku"},"2":{"name":"entity.name.section.adverb.regexp.raku"},"3":{"name":"entity.name.section.p5.adverb.regexp.raku"},"4":{"name":"entity.name.section.adverb.regexp.raku"},"5":{"name":"punctuation.definition.regexp.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.raku"},"2":{"name":"invalid.illegal.p5.regexp.modifier.raku"}}},{"contentName":"string.regexp.p5.raku","begin":"(?x)(?\u003c![\\w\\/])(m|rx) \\s*((?:\\s*:\\w+)*)?(:P5)((?:\\s*:\\w+)*)?\\s* (\\/)","end":"(?\u003c!\\\\)(\\/)([gmixXsuUAJ]+)?","patterns":[{"include":"#p5_escaped_char"},{"include":"source.quoting.raku#q_slash_string_content"}],"beginCaptures":{"1":{"name":"string.regexp.construct.raku"},"2":{"name":"entity.name.section.adverb.regexp.raku"},"3":{"name":"entity.name.section.p5.adverb.regexp.raku"},"4":{"name":"entity.name.section.adverb.regexp.raku"},"5":{"name":"punctuation.definition.regexp.raku"}},"endCaptures":{"1":{"name":"punctuation.definition.regexp.raku"},"2":{"name":"invalid.illegal.p5.regexp.modifier.raku"}}}]},"q_right_double_right_double_string_content":{"begin":"”","end":"”","patterns":[{"include":"#q_right_double_right_double_string_content"}]},"regexp-variables":{"patterns":[{"name":"meta.match.variable.raku","begin":"\\$(?=\\\u003c)","end":"(?![\\w\\\u003c\\\u003e])","patterns":[{"match":"(\\\u003c)([\\w\\-]+)(\\\u003e)","captures":{"1":{"name":"support.class.match.name.delimiter.regexp.raku"},"2":{"name":"variable.other.identifier.regexp.perl6"},"3":{"name":"support.class.match.name.delimiter.regexp.raku"}}}],"beginCaptures":{"0":{"name":"variable.other.identifier.sigil.regexp.perl6"}}}]},"shellquotes":{"patterns":[{"name":"meta.shell.quote.single.raku","begin":"([qQ]x)\\s*({{)","end":"}}","patterns":[{"include":"source.quoting.raku#q_single_string_content"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.single.raku","begin":"([qQ]x)\\s*({)","end":"}","patterns":[{"include":"source.quoting.raku#q_single_string_content"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.single.raku","begin":"([qQ]x)\\s*(\\[\\[)","end":"\\]\\]","patterns":[{"include":"source.quoting.raku#q_single_string_content"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.single.raku","begin":"([Qq]x)\\s*(\\[)","end":"\\]","patterns":[{"include":"source.quoting.raku#q_single_string_content"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.single.raku","begin":"([Qq]x)\\s*(\\|)","end":"\\|","patterns":[{"include":"source.quoting.raku#q_single_string_content"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.single.raku","begin":"([Qq]x)\\s*(\\/)","end":"(?\u003c!\\\\)\\/","patterns":[{"name":"constant.character.escape.raku","match":"\\\\\\/"},{"include":"source.quoting.raku#q_single_string_content"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.double.raku","begin":"(qqx)\\s*({{)","end":"}}","patterns":[{"include":"#interpolation"},{"include":"#variables"},{"include":"source.shell"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.double.raku","begin":"(qqx)\\s*({)","end":"}","patterns":[{"include":"#interpolation"},{"include":"#variables"},{"include":"source.shell"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.double.raku","begin":"(qqx)\\s*(\\[\\[)","end":"\\]\\]","patterns":[{"include":"#interpolation"},{"include":"#variables"},{"include":"source.shell"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.double.raku","begin":"(qqx)\\s*(\\[)","end":"\\]","patterns":[{"include":"#interpolation"},{"include":"#variables"},{"include":"source.shell"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.double.raku","begin":"(qqx)\\s*(\\|)","end":"\\|","patterns":[{"include":"#interpolation"},{"include":"#variables"},{"include":"source.shell"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}},{"name":"meta.shell.quote.double.raku","begin":"(qqx)\\s*(\\/)","end":"(?\u003c!\\\\)\\/","patterns":[{"name":"constant.character.escape.raku","match":"\\\\\\/"},{"include":"#interpolation"},{"include":"#variables"},{"include":"source.shell"}],"beginCaptures":{"1":{"name":"string.quoted.q.shell.operator.raku"},"2":{"name":"punctuation.section.embedded.shell.begin.raku"}},"endCaptures":{"0":{"name":"punctuation.section.embedded.shell.begin.raku"}}}]},"special_variables":{"patterns":[{"name":"keyword.other.special-method.raku","match":"(?x) [\\$\\@](?=[\\s,;\\{\\[\\(])| (?\u003c=[\\(\\,])\\s*%(?![\\w\\*\\!\\?\\.\\^:=~])| \\$_| \\$\\/| \\$\\!(?!\\w)| \\$\\d(?!\\w)"}]},"variables":{"patterns":[{"include":"#regexp-variables"},{"name":"meta.variable.container.raku","captures":{"1":{"name":"variable.other.identifier.sigil.raku"},"2":{"name":"support.class.twigil.raku"},"3":{"name":"variable.other.identifier.raku"}}}]}}}
